{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPH","SORT_FIELD_LENGTH","App","useState","isReverse","setIsReverse","sortType","setSortType","sortedGoods","listOfGoods","copyOfGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBF,IAAMC,EAAkB,OAClBC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA3BR,SAAwBC,EAAxB,GAA+D,IAAxBH,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,UAC3CM,EAAW,YAAOD,GAiBtB,OAfAC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQP,GACN,KAAKN,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,OAIK,IAAdX,IACFM,EAAc,YAAIA,GAAaM,WAG1BN,EAULO,CAAelB,EAAiB,CAAEO,WAAUF,cAE9C,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYd,IAAaN,IAE7BqB,QAAS,WACPd,EAAYP,IARhB,iCAcA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,IAAaL,IAE7BoB,QAAS,WACPd,EAAYN,IARhB,4BAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA0B,IAAdhB,IAEhBiB,SAAwB,IAAdjB,EACN,WACAC,GAAa,IAEb,WACAA,GAAa,IAZnB,sBAkBe,KAAbC,IAAiC,IAAdF,IACrB,wBACEe,KAAK,SACLD,UAAWE,IACT,SACA,YACA,YAEFC,QAAS,WACPd,EAAY,IACZF,GAAa,IATjB,sBAiBF,6BACGG,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfba8fe3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getSortedGoods(listOfGoods, { sortType, isReverse }) {\n  let copyOfGoods = [...listOfGoods];\n\n  copyOfGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SORT_FIELD_ALPH:\n        return good1.localeCompare(good2);\n      case SORT_FIELD_LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse === true) {\n    copyOfGoods = [...copyOfGoods].reverse();\n  }\n\n  return copyOfGoods;\n}\n\nconst SORT_FIELD_ALPH = 'alph';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortType, setSortType] = useState('');\n  const sortedGoods\n  = getSortedGoods(goodsFromServer, { sortType, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SORT_FIELD_ALPH },\n          )}\n          onClick={() => {\n            setSortType(SORT_FIELD_ALPH);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => {\n            setSortType(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReverse === false },\n          )}\n          onClick={(isReverse === false)\n            ? () => {\n              setIsReverse(true);\n            }\n            : () => {\n              setIsReverse(false);\n            }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== '' || isReverse === true) && (\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-danger',\n            'is-light',\n          )}\n          onClick={() => {\n            setSortType('');\n            setIsReverse(false);\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}